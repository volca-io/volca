name: deploy-api-service
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v3.3.0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Yarn Install
        run: |
          yarn install --immutable
      - name: Read workflow vars
        run: |
          yarn dlx -q tsx ./scripts/get-workflow-vars.ts --environment ${{ inputs.environment }} >> $GITHUB_ENV
      - name: Configure AWS credentials from ${{ inputs.environment }} account
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.APPLICATION_NAME }}-${{ inputs.environment }}-github-actions-api-deployment-role
          aws-region: ${{ env.AWS_REGION }}
      - name: Stack status
        id: stack-status
        working-directory: services/api
        run: |
          SERVERLESS_INFO=$(STAGE=${{ inputs.environment }} ./node_modules/.bin/sls info)

          if [[ "$SERVERLESS_INFO" == *"does not exist"* ]]; then
            echo "EXISTS=0" >> $GITHUB_OUTPUT
          else
            echo "EXISTS=1" >> $GITHUB_OUTPUT
          fi
      - name: Pre-deploy migrations
        working-directory: services/api
        if: steps.stack-status.outputs.EXISTS == '1'
        run: |
          STAGE=${{ inputs.environment }} yarn migrate:latest:${{ inputs.environment}}
      - name: Deploy
        working-directory: services/api
        run: |
          yarn deploy:${{ inputs.environment}}
      - name: Post-deploy migrations
        working-directory: services/api
        if: steps.stack-status.outputs.EXISTS == '0'
        run: |
          STAGE=${{ inputs.environment }} yarn migrate:latest:${{ inputs.environment}}
